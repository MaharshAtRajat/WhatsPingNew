{"ast":null,"code":"var _jsxFileName = \"/Users/maharshshah/Documents/THEPROJ/client/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { supabase } from '../utils/supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check active sessions and sets the user\n    supabase.auth.getSession().then(({\n      data: {\n        session\n      }\n    }) => {\n      var _session$user;\n      setUser((_session$user = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user !== void 0 ? _session$user : null);\n      setLoading(false);\n    });\n\n    // Listen for changes on auth state (sign in, sign out, etc.)\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      var _session$user2;\n      setUser((_session$user2 = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user2 !== void 0 ? _session$user2 : null);\n      setLoading(false);\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  const signIn = async (email, password) => {\n    const {\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) throw error;\n  };\n  const signUp = async (email, password) => {\n    const {\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password\n    });\n    if (error) throw error;\n  };\n  const signOut = async () => {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    if (error) throw error;\n  };\n  const value = {\n    user,\n    loading,\n    signIn,\n    signUp,\n    signOut\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","supabase","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","auth","getSession","then","data","session","_session$user","subscription","onAuthStateChange","_event","_session$user2","unsubscribe","signIn","email","password","error","signInWithPassword","signUp","signOut","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maharshshah/Documents/THEPROJ/client/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { supabase } from '../utils/supabase';\nimport { User } from '@supabase/supabase-js';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  signIn: (email: string, password: string) => Promise<void>;\n  signUp: (email: string, password: string) => Promise<void>;\n  signOut: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check active sessions and sets the user\n    supabase.auth.getSession().then(({ data: { session } }) => {\n      setUser(session?.user ?? null);\n      setLoading(false);\n    });\n\n    // Listen for changes on auth state (sign in, sign out, etc.)\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\n      setUser(session?.user ?? null);\n      setLoading(false);\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const signIn = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signInWithPassword({ email, password });\n    if (error) throw error;\n  };\n\n  const signUp = async (email: string, password: string) => {\n    const { error } = await supabase.auth.signUp({ email, password });\n    if (error) throw error;\n  };\n\n  const signOut = async () => {\n    const { error } = await supabase.auth.signOut();\n    if (error) throw error;\n  };\n\n  const value = {\n    user,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}